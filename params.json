{"name":"Foundational UML (fUML) Reference Implementation","tagline":"An open-source implementation of the OMG Foundational Semantics for Executable UML Models (Foundational UML) specification.","body":"### What is fUML?\r\n\r\nfUML is a subset of the standard [Unified Modeling Language (UML)](http://www.uml.org) for which there are standard, precise execution semantics. This subset includes the typical structural modeling constructs of UML, such as classes, associations, data types and enumerations. But it also includes the ability to model behavior using UML activities, which are composed from a rich set of primitive actions. A model constructed in fUML is therefore executable in exactly the same sense as a program in a traditional programming language, but it is written with the level of abstraction and richness of expression of a modeling language.\r\n\r\nLike UML, fUML is standardized by the [Object Management Group (OMG)](http://www.omg.org), which maintains the [fUML specification](http://www.omg.org/spec/FUML) (which is formally known as the \"Semantics of a Foundational Subset for Executable UML Models\"). There is also a standard textual surface syntax for fUML call the [Action Language for fUML (Alf)](http://www.omg.org/spec/ALF), which is particularly useful for defining detailed behaviors in the context of an fUML model, and which has its own [reference implementation](http://alf.modeldriven.org).\r\n\r\n###What is the Reference Implementation?\r\n\r\nThis is a complete open source implementation of fUML. It consists of two parts.\r\n\r\n* The _fUML Execution Engine_ that executes an in-memory representation of fUML models. The implementation for the engine is directly generated from the normative syntactic and semantic models for fUML.\r\n\r\n* The _XMI Loader_ that reads a fUML model from a file in the standard [XML Metadata Interchange (XMI) 2.1](http://www.omg.org/spec/XMI/2.1) format for UML and loads it into memory. The loader also reads the standard Foundational Model Library model file and resolves normative user model references to library elements.\r\n\r\nThe fUML Execution Engine may be used itself as a library implementation of fUML in other software, or it may be used in conjunction with the XMI Loader to provide a standalone capability to execute conforming fUML models represented in XMI.\r\n\r\nThe reference implementation was initially developed as part of a Lockheed Martin Corporation funded project with [Model Driven Solutions](http:www.modeldriven.com) in 2008, and has been maintained by Model Driven Solutions as part of its [modeldriven.org](http://www.modeldriven.org) open source community since then. The objectives for this reference implementation are to encourage UML tool vendors to implement the fUML standard in their tools and to provide a reference that can assist in evaluating vendor implementation conformance with the specification.\r\n\r\nSee also the [Foundational UML Reference Implementation Conformance Statement](https://github.com/ModelDriven/fUML-Reference-Implementation/blob/master/org.modeldriven.fuml/Conformance-Statement.txt).\r\n\r\n###Are there other implementations of fUML?\r\n\r\nA number of other implementations of fUML are now available, associated with various previously existing UML tools. These include at least the following:\r\n\r\n* The [Cameo Simulation Toolkit](https://www.magicdraw.com/simulation) for [MagicDraw](http://www.magicdraw.com) from [No Magic](http://www.nomagic.om).\r\n\r\n* [AM|USE 2.2 by LieberLieber](http://www.lieberlieber.com/model-engineering/amuse/product-overview/) for the [Enterprise Architect](http://www.sparxsystems.com/products/ea/index.html) tool from [Sparx Systems](http://www.sparxsystems.com/).\r\n\r\n* The [Moka](https://wiki.eclipse.org/Papyrus/UserGuide/ModelExecution) module for the open-source [Papyrus](http://www.eclipse.org/papyrus) tool from [Eclipse](http://www.eclipse.org).\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}